(full-reset)
(set-unique-name-assumption t)

(in-knowledge-base Covid-19 Covid-19)
(signature :atomic-concepts (Person Teenager Minor Adult Agent HumanAgent SoftwareAgent Bot AI Gender 
                             Confirmed Patient Status InfectionSource Spreader 
                             Country County City Location 
                             Date 
                             Sars SevereAcuteRespiratorySyndrome  Betacoronavirus Virus Bat Fined COVID-19 Race
                             Seriously-ill-human-1 Human-with-fever
                             SocialDistancing Gathering MassGatherring MaxTenGatherring Group
                             Information Misinformation Concealment Ambivalence Distorsion Falsification Fabricated
                             MedicalMyth DeceptionLIterature UrbanLegend MedicalMyth-COVID-19
                             Uncertainty Certainty
                             Motivation CommunicationChannel Object Content Evidence
							 MisleadingTip Chemical Vitamin COVID-19 Disease Drug Virus
                            )
           :roles  ((has-direct-contact        :domain Person           :range Person :parent has-contact)
                    (has-contact               :domain Person           :range Person :transitive t)
                    (has-status                :domain Person           :range Status :inverse status-of)
                    (has-source-of-infection   :domain Person           :range InfectionSource)
                    (has-origin-of-infection   :domain Person           :range Country)
                    (has-detection-location    :domain Person           :range (or County City))
                    (has-confirmation-date     :domain Person           :range Date)
                    (has-origin                :domain Virus)
                     causes
                    (has-race	               :domain Person           :range Race) 
                    (has-participant           :domain Gathering        :range Person)
                    (hides                     :domain top              :range Information)
                    (hasReceiver               :domain Misinformation   :range (or Agent Group)) 
                    (has-belief-state          :domain (or Agent Group) :range (or Uncertainty Certainty))
                     has-misrepresenting     
                    (driven-by                    :range Motivation) 
                    (has-sender                   :range (or Agent Group)) 
                    (has-receiver                 :range (or Agent Group)) 
                    (has-communication-channel    :range CommunicationChannel) 
                    (has-object                   :range Object)
                    (has-content                  :range Content)
                    (has-start-time               :range Date)
                    (has-end-time                 :range Date)
                    (has-evidence                 :range Evidence)
                    (located-in :domain Location :range Location :transitive t)
                    (kills :parents fights-against)
					(complications)
                    (prevents :domain Drug    :range Disease :inverse prevented-by)
                    (causes   :inverse caused-by)
                    )

           :features (has-gender :inverse inv-has-gender)
           :attributes ((integer has-age) 
                        (integer has-day) (integer has-month) (integer has-year) 
                        (real social-distance-meters) (real social-distance-feet) 
                        (real temperature-celsius) (real temperature-fahrenheit) 
                        (real has-confidence)
                        (string has-string)
                       )
           :individuals (case0 case1 case2 case3 case4 case5 case6 case7 case8 case9 
                         case10 case11 case12 case13 case14 case15 case16 case17 case18 case19 
                         case20 case21 case22 case23 case24 case25 case26 case27 case29 
                         case31 case32 case35 case36 case37 case38 case39
                         case40 case45 
                         case51 case52 
                         case76 
                         case84 case86 case89 
                         case90 case91 case92 case93 case94 case95 case97 case98 case99 
                         case109 
                         case111 case112 case114 case115 case116 case119 
                         case120 case121 
			                   case243 
                         case301 case302 case308
                         male female 
                         white black mongolyan american malayan
                         recovered hospitalized quarantine selfIsolation dead 
                         localTransmission importedCase
                         unknownSourceContact unknownForwardContact
                         unknownOrigin
                         Dambovita Gorj Maramures Timis Cluj Hunedoara Mures Brasov Buzau Satu-Mare Suceava 
                         Constanta Olt Bihor Neamt Ilfov Arad Iasi Bacau Covasna Arges Dolj      
                         Lugoj Timisoara Bucuresti                                                                        
                         Italy Romania Israel Germany Spain Norway USA UK UAE Iran Poland France Greece
                         d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 
                         d28 d29 d30 d31 d32 d33 d34 d35 d36 d37 d38 d39 d40 d41 d42 d43 d44 d45 d46 d47 d48 d49 d50 d51 d52
                         d52 d52 d53 d54 d55 d56 d57 d58 d59 d60 d61 d62 d63 d64 d65
                         SARS-CoV-2 MERS-CoV SARS-CoV

                         m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 m11 m12 m13 m14 m15 m16 m17 m18 m19 m20 m21 m22 m23 m24 m25 m26 m27 m28 m29 
                         m30 m31 m32 m41 m42 m43 m44 m45 m46 m47 m48 m49 m50 m51 m52 m53 m54 m55 m56
                         forstitia bleach zink
                         )
)  

(implies SARS (and Betacoronavirus (some causes SevereAcuteRespiratorySyndrome)))
                      
(equivalent Confirmed (some has-status Status)) 

(equivalent Spreader (and Person (at-least 5 has-direct-contact)))
(equivalent Date (and (max has-day 31) (max has-month 13) (equal has-year 2020)))

(implies Country InfectionSource)

(equivalent Minor (and Person (max has-age 18)))
(equivalent Adult (and Person (min has-age 18)))
(equivalent Teenager (and Person (min has-age 12)))
(equivalent Human-with-fever (and Person (>= temperature-celsius 38.5)))
(equivalent Seriously-ill-human-1 (and Person (>= temperature-celsius 40.0)))

(equivalent SocialDistancing (>= social-distance-meters 1.0))

;(implies top (= temperature-fahrenheit (+ (* 1.8 temperature-celsius) 32)))
;(implies top (= social-distance-meters (* 0.3048 social-distance-feet)))

(equivalent MassGatherring   (and Gathering (at-least 50 has-participant Person)))
(equivalent MaxTenGatherring (and Gathering (at-most 10 has-participant Person)))

(equivalent HumanAgent (and Agent Person))
(equivalent SoftwareAgent (and Agent (and Agent (or Bot AI))))

(implies Concealment   (and Misinformation (some hides Information)))
(implies Ambivalence   (and Misinformation (some hasReceiver (some has-belief-state Uncertainty))))
(implies Distorsion    (and Misinformation (some has-misrepresenting Information)))
(implies Falsification (and Misinformation Fabricated))

(implies Misinformation (and Information 
                            (some driven-by Motivation)
                            (some has-sender (or Agent Group))
                            (some has-receiver (or Agent Group))
                            (some has-communication-channel CommunicationChannel)
                            (some has-object Object)
                            (some has-content Content)
                            (some has-start-time Date)
                            (some has-end-time Date)
                            (some has-evidence Evidence)
                            (>= has-confidence 0.0) (<= has-confidence 1.0)))

(implies MedicalMyth Misinformation)
(implies DeceptionLiterature Misinformation)
(implies UrbanLegend Misinformation)

(implies MedicalMyth-COVID-19 MedicalMyth)

(classify-tbox)
(tbox-coherent?) 
(tbox-cyclic?)
;(get-tbox-signature)

(racer-read-file "dates.racer")
(racer-read-file "geo.racer")
(racer-read-file "cases.racer")

(instance male Gender)
(instance female Gender)

(instance SARS-CoV-2 (and Sars (some has-origin Bat) (some causes COVID-19)))
(instance MERS-CoV   (and Sars (some has-origin Bat)))
(instance SARS-CoV   (and Sars (some has-origin Bat)))

(instance white Race)
(instance black Race)
(instance mongolyan Race)
(instance american Race)
(instance malayan Race)

(instance recovered Status)
(instance hospitalized Status)
(instance quarantine Status)
(instance selfIsolation Status)
(instance dead Status)

(instance localTransmission InfectionSource)
(instance importedCase InfectionSource)

(instance m1 (and MedicalMyth-COVID-19 
                  (string= has-string "I got an e-mail warning that a man infected 
                                 with COVID-19, was recently caught caughing 
                                 in the ketchup dispenser at a fast food restaurant. 
                                 Because of the risk of COVID-19 transmission, 
                                 the e-mail recommended that only individually 
                                 wrapped packets of ketchup be used")))

;(related m1 malicios-intent driven-by)
           
(implies MiracleProduct (and Falsification Product (some fights-against Disease)))
(instance forstitia (and MiracleProduct (some kills COVID-9)))

(implies SpiritualCure Falsification)
(implies ConspiracyTheory Falsification)
(implies MisleadingHealthTip Falsification)

(instance m2  (and MisleadingHealthTip (string= has-string "Gargling bleach or drinking excessive amounts of water can flush out the virus")))
(instance m3  (and MisleadingHealthTip (string= has-string "Eating raw ginger to counter the coronavirus")))
(instance m4  (and MisleadingHealthTip (string= has-string "Regularly rinsing your nose with salt and water can prevent infection")))
(instance m5  (and Falsification (string= has-string "The new coronavirus can be spread by mosquito bites and in Chinese food")))
(instance m6  (and Falsification (string= has-string "Hand dryers are effective in killing the new coronavirus")))
(instance m7  (and Falsification (string= has-string "Cold weather, hot weather, snow, eating garlic and taking a hot bath will also prevent you from getting Covid-19")))
(instance m8  (and MisleadingHealthTip (string= has-string "You should wear a face mask at all times when outdoors")))
(instance m9  (and Falsification (string= has-string "Cold weather and snow can kill the new coronavirus")))
(instance m10 (and Falsification (string= has-string "Taking a hot bath prevents the new coronavirus disease")))
(instance m11 (and Falsification (string= has-string "Ultraviolet disinfection lamp kills the new coronavirus")))
(instance m12 (and Falsification (string= has-string "Spraying alcohol or chlorine all over your body kills the new coronavirus")))
(instance m13 (and Falsification (string= has-string "Vaccines against pneumonia protect you against the new coronavirus")))
(instance m14 (and Falsification (string= has-string "Antibiotics effective in preventing and treating the new coronavirus")))
(instance m15 (and Falsification (string= has-string "High dose of Vitamin C heals COVID-19")))
(instance m16 (and Falsification (string= has-string "In Summer the virus will dissapear because it is very warm")))
(instance m17 (and Falsification (string= has-string "The pets transmit the virus to humans")))
(instance m18 (and Falsification (string= has-string "Vaccines against pneumonia protect against the new coronavirus.")))
(instance m19 (and Falsification (string= has-string "Chloroquine can cure COVID-19")))
(instance m20 (and Falsification (string= has-string "If you can't hold your breath for 10 seconds, you have a coronavirus infection")))
(instance m21 (and Falsification (string= has-string "a")))
(instance m22 (and Falsification (string= has-string "a")))
(instance m23 (and Falsification (string= has-string "a")))
(instance m24 (and Falsification (string= has-string "Taking homeopathic medicine helps prevent the effects of the new coronavirus")))
(instance m25 (and Falsification (string= has-string "a")))
(instance m26 (and Falsification (string= has-string "If you cannot hold your breath for more than 50 seconds, you might have covid-19.")))
(instance m27 (and Falsification (string= has-string "Drinking alcohol prevents COVID-19")))
(instance m28 (and Falsification (string= has-string "The new Coronavirus ‘hates the sun’ and therefore sunbathing can kill it.")))
(instance m33 (and Falsification (string= has-string "Eating garlic prevents Covid-19")))
(instance m41 (and Falsification (string= has-string "Zinc supplements can lower the risk of contracting Covid-19")))
(instance m44 (and Falsification (string= has-string "Vaccines against flu protect against the new coronavirus.")))
(instance m50 (and Falsification (string= has-string "The new coronavirus can be transmitted through mosquito bites")))




;Rules box
(define-rule (?x localTransmission has-source-of-infection)
  (and (?x Romania has-origin-of-infection)))

(define-rule (?x importedCase has-source-of-infection)
  (and (?x ?y has-origin-of-infection) 
       (?y Country)
       (not (same-as ?y Romania)))) 

;(firerule (and (?x Person)
;               (?y Country) 
;               (not (same-as ?y UnknownForwardContact))
;               (neg (?x ?y has-source-of-infection))) 
;          ((related ?x unknownOrigin has-source-of-infection)))

(run-all-rules)

;Qbox (queries)
(realize-abox)
(compute-all-implicit-role-fillers)

;CQ: all cases
(concept-instances Confirmed)

;CQ: number of confirmed cases 
(evaluate (length (retrieve-concept-instances 'Confirmed (current-abox) (all-individuals))))

;CQ: all recovered cases
(individual-fillers recovered (inv has-status))

;CQ: number of recovered cases
(evaluate (length  (retrieve-individual-fillers 'recovered 'status-of (current-abox))))

;CQ: all hospitalized cases
(individual-fillers hospitalized (inv has-status))

;CQ: number of hospitalized cases
(evaluate (length  (retrieve-individual-fillers 'hospitalized 'status-of (current-abox))))

;CQ: all dead cases
(individual-fillers dead (inv has-status))

;CQ: number of dead cases
(evaluate (length  (retrieve-individual-fillers 'dead 'status-of (current-abox))))

; CQ: all Spreaders of the disease
(concept-instances Spreader)

; CQ: all Fined persons
(concept-instances Fined)

; CQ: all cases from Gorj
(individual-fillers Gorj (inv has-detection-location))

; CQ: retrieve all information about individual case1
;(describe-individual case1)

; CQ: persons direcly infected by case1 
(individual-fillers case1 has-direct-contact)

; CQ: person who infected case1
(individual-fillers case1 (inv has-direct-contact))

; CQ: persons direcly or indirectly infected by case3 
(individual-fillers case3 has-contact)

; CQ: person who infected case1
;(individual-fillers case1 (inv has-direct-contact))

;CQ: all cases which have Italy as origin of infection
 (individual-fillers Italy (inv has-origin-of-infection))

;CQ: all cases having source of infection in Romania
(individual-fillers localTransmission (inv has-source-of-infection))

;CQ: all imported cases 
(individual-fillers  importedCase (inv has-source-of-infection))

;CQ: all viruses originated from bats  
(concept-children (some has-origin Bat))

;CQ -nrql query: persons with unknown source of infection
 (retrieve (?x) (and (?x Person) (neg (?x (has-known-successor has-source-of-infection)))))

;CQ - male cases 
(individual-fillers male (inv has-gender))

;CQ - female cases 
(individual-fillers female (inv has-gender))

; CQ: all cases from Satu-Mare
(individual-fillers Satu-Mare (inv has-detection-location))

; CQ: all cases with adults
(concept-instances (and Adult Confirmed))

; CQ: all cases with minors
(concept-instances (and Minor Confirmed))

; CQ: person who infected none until now
(individual-fillers unknownForwardContact (inv has-direct-contact))

; CQ: all cases who where infected from people from people from Italy
(individual-fillers Italy (inv has-origin-of-infection))

; CQ: all cases who where infected from people from people from Italy
(individual-fillers Timis (inv has-detection-location))

; CQ: all cases from Timis county, including all cities from Timis (like Timisoara, Lugoj)
(retrieve (?person) (or (?person Timis has-detection-location)
                        (and (?person ?location has-detection-location)
                             (?location Timis located-in))))
